From: Jason Rhinelander <jason@imaginary.ca>
Date: Thu, 25 Jul 2019 21:33:22 -0300
Subject: Hack around net/if.h / linux/if.h broken mess in xenial

xenial has issues if both linux/if.h and net/if.h get included; this
hack workaround fixes the mess.
---
 llarp/net/net.cpp | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/llarp/net/net.cpp b/llarp/net/net.cpp
index c04de2a..463f5e6 100644
--- a/llarp/net/net.cpp
+++ b/llarp/net/net.cpp
@@ -9,7 +9,21 @@
 #ifndef ANDROID
 #include <ifaddrs.h>
 #endif
-#include <net/if.h>
+
+// Work around for broken glibc/linux header definitions in xenial that makes
+// including both net/if.h (which we need for if_nametoindex) and linux/if.h
+// (which tuntap.h includes) impossible.  When we stop supporting xenial we can
+// remove this mess and just include net/if.h here.
+#if defined(Linux) && __GLIBC__ == 2 && __GLIBC_MINOR__ == 23
+# include <linux/version.h>
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(4,4,0) && LINUX_VERSION_CODE < KERNEL_VERSION(4,5,0)
+#  define _NET_IF_H 1
+#  include <linux/if.h>
+extern "C" unsigned int if_nametoindex (const char *__ifname) __THROW;
+# endif
+#else
+# include <net/if.h>
+#endif
 #endif
 
 #include <net/net_addr.hpp>
